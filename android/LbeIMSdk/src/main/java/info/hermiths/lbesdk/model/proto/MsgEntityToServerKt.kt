// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: msggateway.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")

import info.hermiths.lbesdk.model.proto.IMMsg

@kotlin.jvm.JvmName("-initializemsgEntityToServer")
public inline fun msgEntityToServer(block: MsgEntityToServerKt.Dsl.() -> kotlin.Unit): IMMsg.MsgEntityToServer =
  MsgEntityToServerKt.Dsl._create(IMMsg.MsgEntityToServer.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `MsgEntityToServer`
 */
public object MsgEntityToServerKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: IMMsg.MsgEntityToServer.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
      internal fun _create(builder: IMMsg.MsgEntityToServer.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
  @kotlin.PublishedApi
    internal fun _build(): IMMsg.MsgEntityToServer = _builder.build()

    /**
     * `.MsgType msgType = 1;`
     */
    public var msgType: IMMsg.MsgType
      @JvmName("getMsgType")
      get() = _builder.msgType
      @JvmName("setMsgType")
      set(value) {
        _builder.msgType = value
      }
    public var msgTypeValue: kotlin.Int
      @JvmName("getMsgTypeValue")
      get() = _builder.msgTypeValue
      @JvmName("setMsgTypeValue")
      set(value) {
        _builder.msgTypeValue = value
      }
    /**
     * `.MsgType msgType = 1;`
     */
    public fun clearMsgType() {
      _builder.clearMsgType()
    }

    /**
     * `int64 seq = 2;`
     */
    public var seq: kotlin.Long
      @JvmName("getSeq")
      get() = _builder.seq
      @JvmName("setSeq")
      set(value) {
        _builder.seq = value
      }
    /**
     * `int64 seq = 2;`
     */
    public fun clearSeq() {
      _builder.clearSeq()
    }

    /**
     * `.Join join = 3;`
     */
    public var join: IMMsg.Join
      @JvmName("getJoin")
      get() = _builder.join
      @JvmName("setJoin")
      set(value) {
        _builder.join = value
      }
    /**
     * `.Join join = 3;`
     */
    public fun clearJoin() {
      _builder.clearJoin()
    }
    /**
     * `.Join join = 3;`
     * @return Whether the join field is set.
     */
    public fun hasJoin(): kotlin.Boolean {
      return _builder.hasJoin()
    }

    public val MsgEntityToServerKt.Dsl.joinOrNull: IMMsg.Join?
      get() = _builder.joinOrNull

    /**
     * `.MsgBody msgBody = 4;`
     */
    public var msgBody: IMMsg.MsgBody
      @JvmName("getMsgBody")
      get() = _builder.msgBody
      @JvmName("setMsgBody")
      set(value) {
        _builder.msgBody = value
      }
    /**
     * `.MsgBody msgBody = 4;`
     */
    public fun clearMsgBody() {
      _builder.clearMsgBody()
    }
    /**
     * `.MsgBody msgBody = 4;`
     * @return Whether the msgBody field is set.
     */
    public fun hasMsgBody(): kotlin.Boolean {
      return _builder.hasMsgBody()
    }

    public val MsgEntityToServerKt.Dsl.msgBodyOrNull: IMMsg.MsgBody?
      get() = _builder.msgBodyOrNull
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun IMMsg.MsgEntityToServer.copy(block: MsgEntityToServerKt.Dsl.() -> kotlin.Unit): IMMsg.MsgEntityToServer =
  MsgEntityToServerKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val IMMsg.MsgEntityToServerOrBuilder.joinOrNull: IMMsg.Join?
  get() = if (hasJoin()) getJoin() else null

public val IMMsg.MsgEntityToServerOrBuilder.msgBodyOrNull: IMMsg.MsgBody?
  get() = if (hasMsgBody()) getMsgBody() else null

