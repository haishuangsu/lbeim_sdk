// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: msggateway.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")

import info.hermiths.lbesdk.model.proto.IMMsg

@kotlin.jvm.JvmName("-initializecreateSessionMsg")
public inline fun createSessionMsg(block: CreateSessionMsgKt.Dsl.() -> kotlin.Unit): IMMsg.CreateSessionMsg =
  CreateSessionMsgKt.Dsl._create(IMMsg.CreateSessionMsg.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `CreateSessionMsg`
 */
public object CreateSessionMsgKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: IMMsg.CreateSessionMsg.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
      internal fun _create(builder: IMMsg.CreateSessionMsg.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
  @kotlin.PublishedApi
    internal fun _build(): IMMsg.CreateSessionMsg = _builder.build()

    /**
     * `.SessionBasic sessionBasic = 1;`
     */
    public var sessionBasic: IMMsg.SessionBasic
      @JvmName("getSessionBasic")
      get() = _builder.sessionBasic
      @JvmName("setSessionBasic")
      set(value) {
        _builder.sessionBasic = value
      }
    /**
     * `.SessionBasic sessionBasic = 1;`
     */
    public fun clearSessionBasic() {
      _builder.clearSessionBasic()
    }
    /**
     * `.SessionBasic sessionBasic = 1;`
     * @return Whether the sessionBasic field is set.
     */
    public fun hasSessionBasic(): kotlin.Boolean {
      return _builder.hasSessionBasic()
    }

    public val CreateSessionMsgKt.Dsl.sessionBasicOrNull: IMMsg.SessionBasic?
      get() = _builder.sessionBasicOrNull
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun IMMsg.CreateSessionMsg.copy(block: CreateSessionMsgKt.Dsl.() -> kotlin.Unit): IMMsg.CreateSessionMsg =
  CreateSessionMsgKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val IMMsg.CreateSessionMsgOrBuilder.sessionBasicOrNull: IMMsg.SessionBasic?
  get() = if (hasSessionBasic()) getSessionBasic() else null

